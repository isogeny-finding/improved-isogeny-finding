load('coron_trivariate.sage')
load('bj07_trivariate.sage')

def time_coron_bj7():
  # taken from sample_quadratic_forms.sage
  P.<x1, x2, x3, x4> = PolynomialRing(ZZ)
  # PRIMES
  # generated prime
  p_our = 11956566944641502957704189594909498993478297403838643406058180334130656750161
  # SQISign primes (sqi sign paper, new algos for deuring)
  p_3923 = 2^65 * 5^2 * 7 * 11 * 19 * 29^2 * 37^2 * 47 * 197 * 263 * 281 * 461 * 521 * 3923 * 62731 * 96362257 * 3924006112952623 - 1
  p_6983 = 2^33 * 5^21 * 7^2 * 11 * 31 * 83 * 107 * 137 * 751 * 827 * 3691 * 4019 * 6983 * 517434778561 * 26602537156291 - 1
  # SIDH primes
  p434 = 2^216 * 3^137 - 1
  p503 = 2^250 * 3^159 - 1
  p610 = 2^305 * 3^192 - 1
  p751 = 2^372 * 3^239 - 1
  # assert is_prime(p_our)
  # assert is_prime(p_3923)
  # assert is_prime(p_6983)
  # assert is_prime(p434)
  # assert is_prime(p503)
  # assert is_prime(p610)
  # assert is_prime(p751)
  # all forms with exactly one variable known from sample_quadratic_forms.sage
  forms = [
    # {
    #   "p": p_our,
    #   "iso_degree": 2^175,
    #   "quadratic_form": 240629168420498503223176215378157818954*x1^2 + 170488831021408378415192489212601491020*x1*x2 - 15104078111614064399612518440744417576*x1*x3 + 229179763473888233816300087638609442731*x1*x4 + 310339762963887753119429801297198424426*x2^2 + 283575958157439526164467800738742197715*x2*x3 + 201126730100337382126147666340606048634*x2*x4 + 320146606618084285573638538242137162193*x3^2 + 228535149190336921448704877268835859038*x3*x4 + 383915352420504691156893132295598504163*x4^2,
    #   "sol": [-12067276, 3657809, -10354066, 1420884],
    #   "known_variables": [1],
    # },
    # {
    #   "p": p_3923,
    #   "iso_degree": 2^170,
    #   "quadratic_form": 21580573406026381938229676155543831919*x1^2 + 7896410667338595820405226533817775219*x1*x3 - 19813227922390650527220024769323394792*x1*x4 + 21580573406026381938229676155543831919*x2^2 + 19813227922390650527220024769323394792*x2*x3 + 7896410667338595820405226533817775219*x2*x4 + 280510579013708645403836043210291566374*x3^2 + 280510579013708645403836043210291566374*x4^2,
    #   "sol": [-469542, 663978, -2295563, 278526],
    #   "known_variables": [0],
    # {
    #   "p": p_3923,
    #   "iso_degree": 2^175,
    #   "quadratic_form": 52150086119808130341535072939378067934*x1^2 + 19753212878414061459633371678345100928*x1*x3 - 37857379232108829211567248105675959557*x1*x4 + 52150086119808130341535072939378067934*x2^2 + 37857379232108829211567248105675959557*x2*x3 + 19753212878414061459633371678345100928*x2*x4 + 122640113128134964830826158236679225837*x3^2 + 122640113128134964830826158236679225837*x4^2,
    #   "sol": [-11962176, -1060222, 2914583, 16414523],
    #   "known_variables": [0],
    # },
    # {
    #   "p": p_6983,
    #   "iso_degree": 2^170,
    #   "quadratic_form": 87620947660693008792782971926152753938*x1^2 + 14787974445651319038853807355137103557*x1*x3 - 79354306460776410879038773564685207076*x1*x4 + 87620947660693008792782971926152753938*x2^2 + 79354306460776410879038773564685207076*x2*x3 + 14787974445651319038853807355137103557*x2*x4 + 228994424011406184423880627778672494637*x3^2 + 228994424011406184423880627778672494637*x4^2,
    #   "sol": [-2332767, 678791, 1225481, 1262983],
    #   "known_variables": [2],
    # },
    # {
    #   "p": p_6983,
    #   "iso_degree": 2^175,
    #   "quadratic_form": 111913754540461454925313516963746123255*x1^2 + 87057929275091859608495263551319263664*x1*x3 - 94763152406286739961395079967838248415*x1*x4 + 111913754540461454925313516963746123255*x2^2 + 94763152406286739961395079967838248415*x2*x3 + 87057929275091859608495263551319263664*x2*x4 + 201722706239150982330392657407019345456*x3^2 + 201722706239150982330392657407019345456*x4^2,
    #   "sol": [-14630437, 8206261, 663527, 5261775],
    #   "known_variables": [3],
    # },
    # {
    #   "p": p_6983,
    #   "iso_degree": 2^171,
    #   "quadratic_form": 134219656910101602248109049402529873108*x1^2 + 70409863202565433043481998378447854479*x1*x3 - 131650666573636712384523463674469840232*x1*x4 + 134219656910101602248109049402529873108*x2^2 + 131650666573636712384523463674469840232*x2*x3 + 70409863202565433043481998378447854479*x2*x4 + 178871881879618840755456517255448622202*x3^2 + 178871881879618840755456517255448622202*x4^2,
    #   "sol": [-1903525, 3845154, -3328752, -2400554],
    #   "known_variables": [3],
    # },
    # {
    #   "p": p434,
    #   "iso_degree": 2^170,
    #   "quadratic_form": 748288838313422294120286634350736906063837462003712*x1^2 + 490286866210955331223087936798653853288197040282919*x1*x3 - 646614564525104074962820070541641065150954344817532*x1*x4 + 748288838313422294120286634350736906063837462003712*x2^2 + 646614564525104074962820070541641065150954344817532*x2*x3 + 490286866210955331223087936798653853288197040282919*x2*x4 + 8165103637129463468354279263153913201554634448627627097098324700786730532603749*x3^2 + 8165103637129463468354279263153913201554634448627627097098324700786730532603749*x4^2,
    #   "sol": [-1, 1, 0, 0],
    #   "known_variables": [3],
    # },
    # {
    #   "p": p434,
    #   "iso_degree": 2^280,
    #   "quadratic_form": 14121039619127173395528589849177595439329033373129941070757430383*x1^2 + 1718707240801002068397034519956486982047237989270811895995255100*x1*x3 - 6116155556705317095794078664925418229799029679432952960472063437*x1*x4 + 14121039619127173395528589849177595439329033373129941070757430383*x2^2 + 6116155556705317095794078664925418229799029679432952960472063437*x2*x3 + 1718707240801002068397034519956486982047237989270811895995255100*x2*x4 + 433392045397995369098427499939240355431185585518518092479090265298*x3^2 + 433392045397995369098427499939240355431185585518518092479090265298*x4^2,
    #   "sol": [-5372278115, -4355503575, 951970004, -1477510294],
    #   "known_variables": [0],
    # },
    # {
    #   "p": p434,
    #   "iso_degree": 2^285,
    #   "quadratic_form": 79574328034144931174290933403958213387746585244824692504827783414*x1^2 + 39606868173130893836623626653597746535695586363272393265744976704*x1*x3 - 74694463719386082050192455746532535424188987049236117167200385449*x1*x4 + 79574328034144931174290933403958213387746585244824692504827783414*x2^2 + 74694463719386082050192455746532535424188987049236117167200385449*x2*x3 + 39606868173130893836623626653597746535695586363272393265744976704*x2*x4 + 99238634363967512340446881868373219449561040478740080784743034614*x3^2 + 99238634363967512340446881868373219449561040478740080784743034614*x4^2,
    #   "sol": [-20615436705, 8236454004, 12213801219, 4570812616],
    #   "known_variables": [0],
    # },
    # {
    #   "p": p434,
    #   "iso_degree": 2^290,
    #   "quadratic_form": 64980633636365888095341336792421162080439613048494171446244136686*x1^2 + 6306659468951081221281204232765445482876989445564128511508624124*x1*x3 - 13218757498807577481511631510175146692728072506259281605896975969*x1*x4 + 64980633636365888095341336792421162080439613048494171446244136686*x2^2 + 13218757498807577481511631510175146692728072506259281605896975969*x2*x3 + 6306659468951081221281204232765445482876989445564128511508624124*x2*x4 + 94851080180208639798765341948368147571993425393036983022001011766*x3^2 + 94851080180208639798765341948368147571993425393036983022001011766*x4^2,
    #   "sol": [59915181204, 96012429222, 29831304331, 104863750814],
    #   "known_variables": [0],
    # },
    # {
    #   "p": p503,
    #   "iso_degree": 2^335,
    #   "quadratic_form": 1287649438561269295121543965015719887338065927720297941754722877161586383579*x1^2 + 313201668658967063989756211554928117480366088290453046139404128710501475525*x1*x3 - 424145187441924308193790472645242100653478102028766709596035154832845171096*x1*x4 + 1287649438561269295121543965015719887338065927720297941754722877161586383579*x2^2 + 424145187441924308193790472645242100653478102028766709596035154832845171096*x2*x3 + 313201668658967063989756211554928117480366088290453046139404128710501475525*x2*x4 + 2612092464626943496691382431398378687831649085418448860944498400166728704578*x3^2 + 2612092464626943496691382431398378687831649085418448860944498400166728704578*x4^2,
    #   "sol": [879867596670, 1719193636730, 4778169782111, 505848095490],
    #   "known_variables": [0],
    # },
    # {
    #   "p": p503,
    #   "iso_degree": 2^334,
    #   "quadratic_form": 1795421527241116440358428656745719766107662841307261058521232170238167559551*x1^2 + 209606412186124937889220814430555311201567124325270129059838932599353164772*x1*x3 - 1396673501369877233621732525201063354595156134341398768376554579433750712895*x1*x4 + 1795421527241116440358428656745719766107662841307261058521232170238167559551*x2^2 + 1396673501369877233621732525201063354595156134341398768376554579433750712895*x2*x3 + 209606412186124937889220814430555311201567124325270129059838932599353164772*x2*x4 + 2112383449261178435877934451920444287175680292887745190544166234627968743004*x3^2 + 2112383449261178435877934451920444287175680292887745190544166234627968743004*x4^2,
    #   "sol": [3829185842197, -1602879467521, 230181610727, -612761749217],
    #   "known_variables": [0],
    # },
    # {
    #   "p": p610,
    #   "iso_degree": 2^405,
    #   "quadratic_form": 10836546800258393364546827085072744386856855120328878017390203049416290250011064342757090486*x1^2 + 4157175339579281176398565165318650386631971209266941740977549291589175312117144112699253899*x1*x3 - 9371704289408488314319019977421429353752370673140122808620049379181816150057911736385721712*x1*x4 + 10836546800258393364546827085072744386856855120328878017390203049416290250011064342757090486*x2^2 + 9371704289408488314319019977421429353752370673140122808620049379181816150057911736385721712*x2*x3 + 4157175339579281176398565165318650386631971209266941740977549291589175312117144112699253899*x2*x4 + 63305483973454425874620421967249272328230034891115286031994551581226450135978635037069808349*x3^2 + 63305483973454425874620421967249272328230034891115286031994551581226450135978635037069808349*x4^2,
    #   "sol": [-882255333622923, -2352195245577620, -235003111370685, -260864616306096],
    #   "known_variables": [0],
    # },
    # {
    #   "p": p610,
    #   "iso_degree": 2^404,
    #   "quadratic_form": 26825010553824889636941109822051463673017909626636835748932957863087432522090748771449804556*x1^2 + 20402871675483627905486596814933654874216463117453097748732120541501635076383006244846494868*x1*x3 - 26360206305416545191065791983923729260320747709805642298483249213385118462188437354211063295*x1*x4 + 26825010553824889636941109822051463673017909626636835748932957863087432522090748771449804556*x2^2 + 26360206305416545191065791983923729260320747709805642298483249213385118462188437354211063295*x2*x3 + 20402871675483627905486596814933654874216463117453097748732120541501635076383006244846494868*x2*x4 + 34949455589393288413296600972235459254908921352564364859825664188381937292275531397687744115*x3^2 + 34949455589393288413296600972235459254908921352564364859825664188381937292275531397687744115*x4^2,
    #   "sol": [167649889259033, 236772489001541, 707284856259410, 643583973981482],
    #   "known_variables": [0],
    #   #b_bj07 = 1000000000000000
    # },
    {
      "p": p751,
      "iso_degree": 2^500,
      "quadratic_form": 38594635374039444311431090277857382210358708450052861997963064767202602100307746121927947634779683192316764437209*x1^2 + 11851285652306724824142963067070400852123986671349879673023154143600318011212636138948769392186365046484368279927*x1*x3 - 15433980677791260818866059912230936823652519936004300375065137683986063332856448591954466700383036457316176375978*x1*x4 + 38594635374039444311431090277857382210358708450052861997963064767202602100307746121927947634779683192316764437209*x2^2 + 15433980677791260818866059912230936823652519936004300375065137683986063332856448591954466700383036457316176375978*x2*x3 + 11851285652306724824142963067070400852123986671349879673023154143600318011212636138948769392186365046484368279927*x2*x4 + 69526362724520533475089931347317689501523393614385953644101789085446825257409462887974460740164199618330082153429*x3^2 + 69526362724520533475089931347317689501523393614385953644101789085446825257409462887974460740164199618330082153429*x4^2,
      "sol": [-1972828917067284359, -1079365440735073189, 6689607172259949690, -1968665343222819872],
      "known_variables": [0],
    },
    # {
    #   "p": p751,
    #   "iso_degree": 2^499,
    #   "quadratic_form": 37394565989252964258519221587705693974119725562425970010166619085676770086547521607921783040324684799927242362388*x1^2 + 10236495263150166571337998572773356557815150606383826090532362256346422730563159647846072169579101460055291305809*x1*x3 - 28506544792600455829323377944775654165466079802017093274120353802236274892129554083293256889411452980459114543960*x1*x4 + 37394565989252964258519221587705693974119725562425970010166619085676770086547521607921783040324684799927242362388*x2^2 + 28506544792600455829323377944775654165466079802017093274120353802236274892129554083293256889411452980459114543960*x2*x3 + 10236495263150166571337998572773356557815150606383826090532362256346422730563159647846072169579101460055291305809*x2*x4 + 75359389625580207504220465523566502854075717740732444136690295803832804767849774921558827054440619901836982132806*x3^2 + 75359389625580207504220465523566502854075717740732444136690295803832804767849774921558827054440619901836982132806*x4^2,
    #   "sol": [-1803449081233287109, 3537609270380234794, 1455205783763113712, -3825460059898264405],
    #   "known_variables": [1],
    # },
    # {
    #   "p": p751,
    #   "iso_degree": 2^495,
    #   "quadratic_form": 52050872759120567301129292173243761230044962835647342921052436702100716284668249461140992049238224578666668445144*x1^2 + 25149181361736615102076684990425456572205800669110477861492553164185942251874167275486600349173157327234713055692*x1*x3 - 48637417135317636300946487461391286618176356062311352638305902870350123213906123417723411686453856296226207186567*x1*x4 + 52050872759120567301129292173243761230044962835647342921052436702100716284668249461140992049238224578666668445144*x2^2 + 48637417135317636300946487461391286618176356062311352638305902870350123213906123417723411686453856296226207186567*x2*x3 + 25149181361736615102076684990425456572205800669110477861492553164185942251874167275486600349173157327234713055692*x2*x4 + 64133398263672645744408069891651447353874242088253763966519332824394049263994295906288987007445331874300109086634*x3^2 + 64133398263672645744408069891651447353874242088253763966519332824394049263994295906288987007445331874300109086634*x4^2,
    #   "sol": [888006612149074762, -1251816506115618714, 41238606925806039, 794777229502125615],
    #   "known_variables": [0],
    #   #b_bj07 = 10000000000000000
    # },
    # {
    #   "p": p751,
    #   "iso_degree": 2^498,
    #   "quadratic_form": 41146946699468883309828646042814859500928202348643102989514918515515660256306059263474868371509388906188996948087*x1^2 + 1879217347664176089232676564737056354104010240274128098861422737299769026642205461230171489298582130557361843953*x1*x3 - 38852378342950653755134383299550618357201293079359517966041185921341207424395877787099273348496105819064296836858*x1*x4 + 41146946699468883309828646042814859500928202348643102989514918515515660256306059263474868371509388906188996948087*x2^2 + 38852378342950653755134383299550618357201293079359517966041185921341207424395877787099273348496105819064296836858*x2*x3 + 1879217347664176089232676564737056354104010240274128098861422737299769026642205461230171489298582130557361843953*x2*x4 + 72105936493861614322840879865623766094439342229229730517652180389985164167583236640653572400526992689252357004423*x3^2 + 72105936493861614322840879865623766094439342229229730517652180389985164167583236640653572400526992689252357004423*x4^2,
    #   "sol": [1610852046871505227, -284577462556314393, -2570332763518669814, -1328953893524150076],
    #   "known_variables": [0],
    #   #b_bj07 = 1000000000000000000
    # },
  ]
  for form in forms:
    p = form["p"]

    Q.<i,j,k> = QuaternionAlgebra(QQ, -1, -p)
    I = Q.ideal([2, 1 - j, i + j, 3/2 + 1/2*i + 1/2*j + 1/2*k])

    iso_degree = form["iso_degree"]
    quadratic_form = form["quadratic_form"]
    sol = form["sol"]
    known_variables = form["known_variables"]
    f = quadratic_form - iso_degree 

    for v in known_variables:
      if v == 0:
        f = f(x1 = sol[0])
      elif v == 1:
        f = f(x2 = sol[1])
      elif v == 2:
        f = f(x3 = sol[2])
      elif v == 3:
        f = f(x4 = sol[3])

    b_coron = 500000000000000000000
    # even though the bound is smaller than some roots, the algorithm still works
    b_bj07 = 1000000000000000
             #888006612149074762
             #167649889259033

    prime_bits = len(bin(p)) - 2
    degree_bits = len(bin(iso_degree)) - 2
    print("==========")
    print("f: ", f)
    print("degree bit-length:", degree_bits)
    print("prime bit-length:", prime_bits)
    print("ratio:", degree_bits / prime_bits * 1.0)
    print("known variables: ", known_variables)
    print("solution: ", sol)

    assert f(x1 = sol[0], x2 = sol[1], x3 = sol[2], x4 = sol[3]) == 0

    # taken from find_roots.sage:small_roots() -- expanded function call
    variables = [str(f.variables()[0]), str(f.variables()[1]), str(f.variables()[2])]
    sols = [x for x in sol]
    if "x1" not in variables:
      sols.pop(0)
    elif "x2" not in variables:
      sols.pop(1)
    elif "x3" not in variables:
      sols.pop(2)
    elif "x4" not in variables:
      sols.pop(3)

    roots, _ = coron_trivariate(f, b_coron, b_coron, b_coron, l=0, debug=False)
    print("Coron:", roots)
    # actually works up to a bit more than p^0.67
    # should work up to p^{2/3}
    if degree_bits > prime_bits * 2 / 3:
      if not roots:
        print("No roots as expected.")
      if roots:
        print("Found a root against expectations.")
    # should work up to p^{2/3}
    if degree_bits <= prime_bits * 2 / 3:
      if not roots:
        print("No roots against expectations.")
      if roots:
        print("Found a root as expected.")

    roots = bj07_trivariate(f, b_bj07, b_bj07, b_bj07, opts={"debug":False, "returnFirst": True, "solution": sols, "S": "predef2"})
    print("BJ07:", roots)
    # should work up to p^{2/3}
    if degree_bits > prime_bits * 2 / 3:
      if not roots:
        print("No roots as expected.")
      if roots:
        print("Found a root against expectation.")
    # should work up to p^{2/3}
    if degree_bits <= prime_bits * 2 / 3:
      if not roots:
        print("No roots against expectations.")
      if roots:
        print("Found a root as expected.")
    continue

if __name__ == '__main__':
	time_coron_bj7()

